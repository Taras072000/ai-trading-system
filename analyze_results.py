#!/usr/bin/env python3
import pandas as pd
import numpy as np

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
df = pd.read_csv('reports/csv_reports/all_trades_20251022_125859.csv')

# –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
total_trades = len(df)
profitable_trades = len(df[df['–†–µ–∑—É–ª—å—Ç–∞—Ç'] == '–ü—Ä–∏–±—ã–ª—å'])
losing_trades = len(df[df['–†–µ–∑—É–ª—å—Ç–∞—Ç'] == '–£–±—ã—Ç–æ–∫'])
winrate = (profitable_trades / total_trades) * 100

# –ü—Ä–∏–±—ã–ª—å/—É–±—ã—Ç–æ–∫
total_pnl = df['P&L ($)'].sum()
avg_profit = df[df['–†–µ–∑—É–ª—å—Ç–∞—Ç'] == '–ü—Ä–∏–±—ã–ª—å']['P&L ($)'].mean()
avg_loss = df[df['–†–µ–∑—É–ª—å—Ç–∞—Ç'] == '–£–±—ã—Ç–æ–∫']['P&L ($)'].mean()

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–∏–º–≤–æ–ª–∞–º
symbol_stats = df.groupby('–°–∏–º–≤–æ–ª').agg({
    '–†–µ–∑—É–ª—å—Ç–∞—Ç': lambda x: (x == '–ü—Ä–∏–±—ã–ª—å').sum() / len(x) * 100,
    'P&L ($)': 'sum'
}).round(2)

print('üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–û–ô –°–ò–°–¢–ï–ú–´')
print('=' * 50)
print(f'üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:')
print(f'   –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫: {total_trades}')
print(f'   –ü—Ä–∏–±—ã–ª—å–Ω—ã—Ö: {profitable_trades}')
print(f'   –£–±—ã—Ç–æ—á–Ω—ã—Ö: {losing_trades}')
print(f'   –í–ò–ù–†–ï–ô–¢: {winrate:.1f}%')
print()
print(f'üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:')
print(f'   –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: ${total_pnl:.2f}')
print(f'   –°—Ä–µ–¥–Ω—è—è –ø—Ä–∏–±—ã–ª—å: ${avg_profit:.2f}')
print(f'   –°—Ä–µ–¥–Ω–∏–π —É–±—ã—Ç–æ–∫: ${avg_loss:.2f}')
print()
print(f'üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–∏–º–≤–æ–ª–∞–º:')
for symbol, row in symbol_stats.iterrows():
    print(f'   {symbol}: –í–∏–Ω—Ä–µ–π—Ç {row["–†–µ–∑—É–ª—å—Ç–∞—Ç"]:.1f}%, P&L ${row["P&L ($)"]:.2f}')

print()
print('üîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó:')
print('=' * 50)

# –ê–Ω–∞–ª–∏–∑ –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º
direction_stats = df.groupby('–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ').agg({
    '–†–µ–∑—É–ª—å—Ç–∞—Ç': lambda x: (x == '–ü—Ä–∏–±—ã–ª—å').sum() / len(x) * 100,
    'P&L ($)': 'sum'
}).round(2)

print(f'üìä –ü–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º:')
for direction, row in direction_stats.iterrows():
    print(f'   {direction}: –í–∏–Ω—Ä–µ–π—Ç {row["–†–µ–∑—É–ª—å—Ç–∞—Ç"]:.1f}%, P&L ${row["P&L ($)"]:.2f}')

# –ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞
consensus_stats = df.groupby('–°–∏–ª–∞ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞').agg({
    '–†–µ–∑—É–ª—å—Ç–∞—Ç': lambda x: (x == '–ü—Ä–∏–±—ã–ª—å').sum() / len(x) * 100,
    'P&L ($)': 'sum'
}).round(2)

print(f'üìä –ü–æ —Å–∏–ª–µ –∫–æ–Ω—Å–µ–Ω—Å—É—Å–∞:')
for consensus, row in consensus_stats.iterrows():
    print(f'   {consensus} –º–æ–¥–µ–ª–µ–π: –í–∏–Ω—Ä–µ–π—Ç {row["–†–µ–∑—É–ª—å—Ç–∞—Ç"]:.1f}%, P&L ${row["P&L ($)"]:.2f}')

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞
df['Cumulative_PnL'] = df['P&L ($)'].cumsum()
running_max = df['Cumulative_PnL'].expanding().max()
drawdown = df['Cumulative_PnL'] - running_max
max_drawdown = drawdown.min()

print()
print(f'üìâ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ—Å–∞–¥–∫–∞: ${max_drawdown:.2f}')

# –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
print()
print('üìä –°–†–ê–í–ù–ï–ù–ò–ï –° –ü–†–ï–î–´–î–£–©–ò–ú–ò –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú–ò:')
print('=' * 50)
print(f'   –ü—Ä–µ–¥—ã–¥—É—â–∏–π –≤–∏–Ω—Ä–µ–π—Ç: 45.9%')
print(f'   –ù–æ–≤—ã–π –≤–∏–Ω—Ä–µ–π—Ç: {winrate:.1f}%')
print(f'   –£–ª—É—á—à–µ–Ω–∏–µ: {winrate - 45.9:.1f} –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤')
print()
if winrate >= 70:
    print('‚úÖ –¶–ï–õ–¨ –î–û–°–¢–ò–ì–ù–£–¢–ê! –í–∏–Ω—Ä–µ–π—Ç 70%+ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç!')
elif winrate >= 60:
    print('üü° –•–û–†–û–®–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢! –ë–ª–∏–∑–∫–æ –∫ —Ü–µ–ª–∏ 70%')
else:
    print('üî¥ –¶–ï–õ–¨ –ù–ï –î–û–°–¢–ò–ì–ù–£–¢–ê. –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è')